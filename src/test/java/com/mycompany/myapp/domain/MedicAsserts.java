package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MedicAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicAllPropertiesEquals(Medic expected, Medic actual) {
        assertMedicAutoGeneratedPropertiesEquals(expected, actual);
        assertMedicAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicAllUpdatablePropertiesEquals(Medic expected, Medic actual) {
        assertMedicUpdatableFieldsEquals(expected, actual);
        assertMedicUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicAutoGeneratedPropertiesEquals(Medic expected, Medic actual) {
        assertThat(actual)
            .as("Verify Medic auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicUpdatableFieldsEquals(Medic expected, Medic actual) {
        assertThat(actual)
            .as("Verify Medic relevant properties")
            .satisfies(a -> assertThat(a.getGradProfesional()).as("check gradProfesional").isEqualTo(expected.getGradProfesional()))
            .satisfies(a -> assertThat(a.getTelefon()).as("check telefon").isEqualTo(expected.getTelefon()))
            .satisfies(a -> assertThat(a.getDisponibil()).as("check disponibil").isEqualTo(expected.getDisponibil()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMedicUpdatableRelationshipsEquals(Medic expected, Medic actual) {
        assertThat(actual)
            .as("Verify Medic relationships")
            .satisfies(a -> assertThat(a.getSpecializaris()).as("check specializaris").isEqualTo(expected.getSpecializaris()))
            .satisfies(a -> assertThat(a.getClinicis()).as("check clinicis").isEqualTo(expected.getClinicis()));
    }
}
