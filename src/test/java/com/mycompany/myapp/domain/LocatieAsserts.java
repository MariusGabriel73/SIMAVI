package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LocatieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocatieAllPropertiesEquals(Locatie expected, Locatie actual) {
        assertLocatieAutoGeneratedPropertiesEquals(expected, actual);
        assertLocatieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocatieAllUpdatablePropertiesEquals(Locatie expected, Locatie actual) {
        assertLocatieUpdatableFieldsEquals(expected, actual);
        assertLocatieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocatieAutoGeneratedPropertiesEquals(Locatie expected, Locatie actual) {
        assertThat(actual)
            .as("Verify Locatie auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocatieUpdatableFieldsEquals(Locatie expected, Locatie actual) {
        assertThat(actual)
            .as("Verify Locatie relevant properties")
            .satisfies(a -> assertThat(a.getOras()).as("check oras").isEqualTo(expected.getOras()))
            .satisfies(a -> assertThat(a.getAdresa()).as("check adresa").isEqualTo(expected.getAdresa()))
            .satisfies(a -> assertThat(a.getCodPostal()).as("check codPostal").isEqualTo(expected.getCodPostal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocatieUpdatableRelationshipsEquals(Locatie expected, Locatie actual) {
        assertThat(actual)
            .as("Verify Locatie relationships")
            .satisfies(a -> assertThat(a.getClinicis()).as("check clinicis").isEqualTo(expected.getClinicis()));
    }
}
